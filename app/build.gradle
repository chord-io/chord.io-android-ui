apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "com.yelp.codegen.plugin"

apply plugin: 'kotlin-kapt'

apply plugin: "org.hidetake.swagger.generator"

android {
    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "io.chord"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'META-INF/README'
        exclude 'META-INF/INDEX.LIST'
        exclude("META-INF/*.kotlin_module")
        exclude 'draftv3/schema'
        exclude 'draftv4/schema'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.16'
    implementation('io.swagger.codegen.v3:swagger-codegen-generators:1.0.16') {
        exclude group: "javax.mail"
        exclude group: "javax.xml.bind"
    }
    implementation project(":generators")
    swaggerCodegen project(':generators')

    // Reflection
    implementation('org.reflections:reflections:0.9.12') {
        exclude group: "com.google.code.findbugs"
    }

    implementation("com.google.guava:guava:28.2-android")

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1'

    // Moshi + OkHttp + Retrofit
    implementation 'com.squareup.moshi:moshi:1.9.2'
    implementation 'com.squareup.moshi:moshi-adapters:1.9.2'
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.2'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    // Date Support
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.2'
    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Swagger
    implementation "io.swagger.core.v3:swagger-annotations:2.0.0"

    // Testing Dependencies
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.2'

    // Material
    implementation 'com.google.android.material:material:1.2.0-alpha03'

    // RecyclerView
    implementation 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:3.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Iconics
    implementation 'com.mikepenz:iconics-core:4.0.2'
    implementation 'com.mikepenz:iconics-views:4.0.2'
    implementation 'com.mikepenz:fontawesome-typeface:5.9.0.0-kotlin@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1-kotlin@aar'

    // Keycloak
    implementation('org.keycloak:keycloak-admin-client:8.0.1') {
        exclude group: 'com.google.guava'
        exclude group: 'com.sun.activation'
        exclude group: 'javax.activation'
    }

    // Worker
    implementation 'androidx.work:work-runtime:2.2.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // DI
    implementation 'org.koin:koin-android:2.0.1'
    implementation 'org.koin:koin-android-ext:2.0.1'

    // SeekBar
    implementation 'com.github.warkiz.widget:indicatorseekbar:2.1.2'

    // Button loader
    implementation 'com.github.razir.progressbutton:progressbutton:1.0.3'

    // JWT Decoder
    implementation 'com.auth0.android:jwtdecode:1.4.0'

    // LifeCycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
}

generateSwagger {
    platform = "kotlin"
    packageName = "io.chord.clients"
    specName = "chord.io.api"
    inputFile = file("./swagger.json")
    outputDir = file("./src/main/java/")
    features {
        headersToRemove = ["Accept-Language"]
    }
}

swaggerSources {
    api {
        inputFile = file('swagger.json')
        code {
            language = 'io.chord.generators.JavaClientGenerator'
            outputDir = file('src/main/java/io/chord/tmp')
            configFile = file('swagger-config-java.json')
            templateDir = file('templates/java')
            components = ['apis']
            rawOptions = ["--template-engine", "mustache"]
        }
    }
    model {
        inputFile = file('swagger.json')
        code {
            language = 'io.chord.generators.KotlinClientGenerator'
            outputDir = file('src/main/java/io/chord/tmp')
            configFile = file('swagger-config-kotlin.json')
            templateDir = file('templates/kotlin')
            components = ['models']
            rawOptions = ["--template-engine", "mustache"]
        }
    }
}

task generateSwagger3Api(dependsOn: generateSwaggerCodeApi) {
    doLast{
        ant.move(file: "$generateSwaggerCodeApi.outputDir/../tmp/io/chord/clients", tofile: generateSwaggerCodeApi.outputDir)
        delete "$generateSwaggerCodeApi.outputDir/../io"

        fileTree("$generateSwaggerCodeApi.outputDir").exclude(
                "apis/"
        ).visit { FileVisitDetails details ->
            delete details.file
        }

        ant.move(file: "$generateSwaggerCodeApi.outputDir", tofile: "$generateSwaggerCodeApi.outputDir/../clients/")
    }
}

task generateSwagger3Model(dependsOn: generateSwaggerCodeModel) {
    doLast{
        ant.move(file: "$generateSwaggerCodeModel.outputDir/../tmp/io/chord/clients", tofile: generateSwaggerCodeModel.outputDir)
        delete "$generateSwaggerCodeModel.outputDir/../io"

        fileTree("$generateSwaggerCodeModel.outputDir").exclude(
                "models/"
        ).visit { FileVisitDetails details ->
            delete details.file
        }

        ant.move(file: "$generateSwaggerCodeModel.outputDir", tofile: "$generateSwaggerCodeModel.outputDir/../clients/")
    }
}

generateSwagger3Api.shouldRunAfter generateSwaggerCodeApi
generateSwagger3Model.shouldRunAfter generateSwaggerCodeModel

repositories {
    mavenCentral()
    jcenter()
}
